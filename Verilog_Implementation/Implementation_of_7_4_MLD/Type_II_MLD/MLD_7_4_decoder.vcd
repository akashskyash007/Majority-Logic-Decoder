$date
	Fri Jan 27 18:38:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MLD_7_4_decoder_test_bench $end
$var wire 7 ! decoded_vector [0:6] $end
$var reg 1 " clk $end
$var reg 1 # load $end
$var reg 1 $ received_bit_stream $end
$var reg 1 % reset $end
$scope module DUT $end
$var wire 1 " clk $end
$var wire 1 # load $end
$var wire 1 $ received_bit_stream $end
$var wire 1 % reset $end
$var wire 1 & error_value $end
$var wire 7 ' decoded_vector [0:6] $end
$var reg 1 ( parity_check_sum_1 $end
$var reg 1 ) parity_check_sum_2 $end
$var reg 1 * parity_check_sum_3 $end
$var reg 1 + w0 $end
$scope module FF1 $end
$var wire 1 + D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 , Q $end
$upscope $end
$scope module FF2 $end
$var wire 1 - D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 . Q $end
$upscope $end
$scope module FF3 $end
$var wire 1 / D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 0 Q $end
$upscope $end
$scope module FF4 $end
$var wire 1 1 D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 2 Q $end
$upscope $end
$scope module FF5 $end
$var wire 1 3 D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 4 Q $end
$upscope $end
$scope module FF6 $end
$var wire 1 5 D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 6 Q $end
$upscope $end
$scope module FF7 $end
$var wire 1 7 D $end
$var wire 1 " clk $end
$var wire 1 % reset $end
$var reg 1 8 Q $end
$upscope $end
$scope module M $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 * C $end
$var wire 1 & M $end
$var wire 1 9 t0 $end
$var wire 1 : t1 $end
$var wire 1 ; t2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
bx '
x&
x%
x$
x#
0"
bx !
$end
#2
0+
0$
1#
#5
0-
b0xxxxxx !
b0xxxxxx '
0,
1"
#10
0"
#12
1+
1$
#15
0/
1-
0.
b10xxxxx !
b10xxxxx '
1,
1"
#20
0"
#25
1/
01
1.
b110xxxx !
b110xxxx '
00
1"
#30
0"
#35
03
11
02
b1110xxx !
b1110xxx '
10
1"
#40
0"
#45
13
05
12
b11110xx !
b11110xx '
04
1"
#50
0"
#55
07
15
06
b111110x !
b111110x '
14
1"
#60
0"
#62
0+
0$
#65
0&
0:
09
0;
0-
17
1*
0)
0(
0,
16
b111110 !
b111110 '
08
1"
#70
0"
#72
0#
#75
0/
0*
1(
1+
18
b11111 !
b11111 '
0.
1"
#80
0"
#85
1-
01
1,
b1001111 !
b1001111 '
00
1"
#90
0"
#95
03
1/
1)
0(
02
b1100111 !
b1100111 '
1.
1"
#100
0"
#105
0+
1&
1:
19
1;
11
05
1*
1(
10
b1110011 !
b1110011 '
04
1"
#110
0"
#115
1+
0&
0:
09
0;
07
13
0-
0*
0)
0(
06
12
b111001 !
b111001 '
0,
1"
#120
0"
#125
1-
0/
15
0+
1,
0.
14
b1011100 !
b1011100 '
08
1"
#130
0"
#135
17
01
1/
0-
16
00
1.
b101110 !
b101110 '
0,
1"
#140
0"
