$date
	Sun Jan 22 01:45:07 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MLD_7_4_Encoder_test_bench $end
$var wire 4 ! parity_vector [3:0] $end
$var reg 1 " clk $end
$var reg 1 # information_bit $end
$var reg 1 $ reset $end
$scope module DUT $end
$var wire 1 " clk $end
$var wire 1 # information_bit $end
$var wire 1 $ reset $end
$var wire 4 % parity_vector [3:0] $end
$var wire 1 & ff4_output $end
$var wire 1 ' ff3_output $end
$var wire 1 ( ff2_output $end
$var wire 1 ) ff1_output $end
$var reg 1 * ff1_input $end
$var reg 1 + ff2_input $end
$var reg 1 , ff3_input $end
$var reg 1 - ff4_input $end
$scope module FF1 $end
$var wire 1 * D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 ) Q $end
$upscope $end
$scope module FF2 $end
$var wire 1 + D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 ( Q $end
$upscope $end
$scope module FF3 $end
$var wire 1 , D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 ' Q $end
$upscope $end
$scope module FF4 $end
$var wire 1 - D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 & Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x-
x,
x+
x*
x)
x(
x'
x&
bx %
1$
0#
0"
bx !
$end
#5
0-
0,
0+
0*
0)
0(
0'
b0 !
b0 %
0&
1"
#7
1-
1,
1*
1#
0$
#10
0"
#15
0,
1+
0*
1&
1'
b1101 !
b1101 %
1)
1"
#17
0-
1,
1*
0#
#20
0"
#25
1-
0*
1(
b111 !
b111 %
0&
1"
#27
0-
0,
1*
1#
#30
0"
#35
1-
b11 !
b11 %
0'
1"
#37
