$date
	Wed Jan 25 00:28:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MLD_15_7_Encoder_test_bench $end
$var wire 1 ! out $end
$var reg 1 " clk $end
$var reg 1 # information_bit $end
$var reg 1 $ reset $end
$var reg 1 % sel $end
$scope module DUT $end
$var wire 1 " clk $end
$var wire 1 & final_flip_flop_output_after_delay $end
$var wire 1 ' gate_input $end
$var wire 1 # information_bit $end
$var wire 1 $ reset $end
$var wire 1 % sel $end
$var wire 1 ! out $end
$var wire 1 ( gate_output $end
$var wire 1 ) ff8_output $end
$var wire 1 * ff7_output $end
$var wire 1 + ff6_output $end
$var wire 1 , ff5_output $end
$var wire 1 - ff4_output $end
$var wire 1 . ff3_output $end
$var wire 1 / ff2_output $end
$var wire 1 0 ff1_output $end
$var reg 1 1 ff1_input $end
$var reg 1 2 ff2_input $end
$var reg 1 3 ff3_input $end
$var reg 1 4 ff4_input $end
$var reg 1 5 ff5_input $end
$var reg 1 6 ff6_input $end
$var reg 1 7 ff7_input $end
$var reg 1 8 ff8_input $end
$scope module FF1 $end
$var wire 1 1 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 0 Q $end
$upscope $end
$scope module FF2 $end
$var wire 1 2 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 / Q $end
$upscope $end
$scope module FF3 $end
$var wire 1 3 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 . Q $end
$upscope $end
$scope module FF4 $end
$var wire 1 4 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 - Q $end
$upscope $end
$scope module FF5 $end
$var wire 1 5 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 , Q $end
$upscope $end
$scope module FF6 $end
$var wire 1 6 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 + Q $end
$upscope $end
$scope module FF7 $end
$var wire 1 7 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 * Q $end
$upscope $end
$scope module FF8 $end
$var wire 1 8 D $end
$var wire 1 " clk $end
$var wire 1 $ reset $end
$var reg 1 ) Q $end
$upscope $end
$scope module GATE $end
$var wire 1 ' in0 $end
$var wire 1 9 in1 $end
$var wire 1 % sel $end
$var reg 1 ( out $end
$upscope $end
$scope module SWITCH $end
$var wire 1 # in0 $end
$var wire 1 & in1 $end
$var wire 1 % sel $end
$var reg 1 ! out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
09
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
1$
0#
0"
0!
$end
#5
08
07
05
01
0(
06
04
03
02
0'
00
0/
0.
0-
0,
0+
0*
0)
1"
#7
18
17
15
11
1(
1'
1!
0&
1#
0$
#10
0"
#15
07
05
01
0(
0'
18
16
12
1)
1*
1,
10
1"
#17
08
17
15
11
1(
1'
0!
1&
0#
#20
0"
#25
18
05
01
0(
17
13
0'
1/
1+
0)
1"
#27
0&
#30
0"
#35
08
07
15
11
1(
1'
06
14
02
1)
0,
1.
00
1"
#37
1&
#40
0"
#45
01
0(
08
07
16
15
03
12
0'
10
0/
1-
1,
0+
0*
0)
1"
#47
0&
#50
0"
#55
17
04
13
02
1+
0.
1/
00
1"
#60
0"
#65
18
05
14
03
0/
1.
0-
1*
1"
#70
0"
#75
08
07
11
1(
1'
06
05
04
1)
0,
1-
0.
1"
#77
18
17
15
01
0(
1!
1&
1%
#80
0"
#85
07
16
05
0-
1,
0+
1"
#90
0"
#95
08
17
06
0*
1+
0,
1"
#100
0"
#105
18
07
0'
0+
1*
0)
1"
#107
0!
0&
#110
0"
#115
1'
08
1)
0*
1"
#117
1!
1&
#120
0"
#125
0'
0)
1"
#127
0!
0&
#130
0"
#135
1"
#140
0"
#145
1"
#150
0"
#155
1"
#157
